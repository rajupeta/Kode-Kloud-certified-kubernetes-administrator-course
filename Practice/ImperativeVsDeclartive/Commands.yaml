k run nginx --image=nginx
k describe pod nginx
k expose pod nginx --type=NodePort --port=80 --name=nginx-service --dry-run=client -o yaml > nginxExposeService.yaml
cat nginxExposeService.yaml 
k create service nodeport nginxCreateSvc --tcp=80:80 --node-port-30080 --dry-run=client -o yaml> nginxCreateSvc.yaml
k create service nodeport nginxCreateSvc --tcp=80:80 --node-port=30080 --dry-run=client -o yaml> nginxCreateSvc.yaml
cat nginxCreateSvc.yaml 
k run nginx --image=nginx --dry-run=client -o yaml >nginxPod.yaml
k apply -f nginxPod.yaml 
k delete pod nginx 
vi nginxPod.yaml 
cat nginxPod.yaml 
k apply -f nginxPod.yaml 
k expose pod nginx --type=NodePort --port=80 --name=nginx-service --dry-run=client -o yaml > nginxExposeService.yaml
cat nginxExposeService.yaml 
history |cut -c 8-


kubectl expose pod redis --port=6379 --name redis-service --dry-run=client -o yaml
(This will automatically use the pod’s labels as selectors)

kubectl create service clusterip redis --tcp=6379:6379 --dry-run=client -o yaml 
(This will not use the pods labels as selectors, instead, it will assume selectors as app=redis.

kubectl expose pod nginx --type=NodePort --port=80 --name=nginx-service --dry-run=client -o yaml
(This will automatically use the pod’s labels as selectors, 
but you cannot specify the node port. 
You have to generate a definition file and then add the node port manually 
before creating the service with the pod.)